{"version":3,"sources":["Components/ViewSelection.jsx","Components/NewTask.jsx","Components/ViewSelectedTask.jsx","Components/Modal.jsx","Components/AddTask.jsx","Components/Today.jsx","Components/Upcoming.jsx","Components/Header.jsx","Components/Navigation.jsx","Components/Completed.jsx","Components/Login.jsx","Components/Signup.jsx","Components/ProtectedRoutes.jsx","Components/View.jsx","App.js","reportWebVitals.js","index.js"],"names":["ViewSelection","_ref","tasks","tasksToday","setInViewSelect","completed","react_default","a","createElement","Fragment","className","onClick","react_router_dom","to","style","_ref2","color","isActive","fontWeight","_ref3","length","_ref4","NewTask","addOrUpdateTask","setOpenModal","validate","Yup","name","max","required","date","description","type","formik_esm","initialValues","format","Date","comments","validationSchema","onSubmit","values","id","placeholder","htmlFor","bs_index_esm","index_esm","ViewSelectedTask","selectedTask","completeSelected","modalType","deleteTask","completedView","_useState","useState","_useState2","Object","slicedToArray","focus","setFocus","Type","parseISO","concat","onChange","index","onFocus","onBlur","border","ai_index_esm","Modal","openModal","CSSTransition","in","timeout","classNames","unmountOnExit","Components_NewTask","Components_ViewSelectedTask","AddTask","Today","selectTask","completedSelected","setModalType","getTasks","loading","setLoading","useEffect","console","log","setTimeout","esm","ariaLabel","Components_AddTask","fa_index_esm","map","task","isToday","key","Upcoming","isYesterday","isTomorrow","isSameDay","renderHeader","Header","location","useLocation","pathname","slice","Navigation","inViewSelect","localStorage","getItem","Components_Header","removeItem","window","reload","Completed","Login","navigate","useNavigate","loginError","setLoginError","username","min","matches","password","axios","post","then","res","data","setItem","catch","error","response","status","headers","request","message","config","Signup","createError","setCreateError","ProtectedRoutes","react_router","Components_Login","View","_useState3","_useState4","_useState5","_useState6","setSelectedTask","_useState7","_useState8","_useState9","_useState10","setCompleted","_useState11","_useState12","setTasks","userId","get","params","_step","comp","incomp","_iterator","_createForOfIteratorHelper","item","s","n","done","value","push","err","e","f","put","filtered","toConsumableArray","completedTask","splice","uID","jsonTask","cloneDeep","resID","updated","filter","Components_Modal","selectedId","delete","update","Components_Navigation","Components_ViewSelection","path","element","Components_Signup","Components_ProtectedRoutes","Components_Today","Components_Upcoming","Components_Completed","App","Components_View","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App_0"],"mappings":"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","file":"static/js/main.702c8663.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport { NavLink, } from \"react-router-dom\";\r\n\r\nconst ViewSelection = ({tasks,tasksToday,setInViewSelect,completed}) => {\r\n    \r\n    return (\r\n        <>\r\n   \r\n                <div className=\"navModal\" onClick={()=>{setInViewSelect(false)}}/>\r\n                <div className=\"viewSelection\">\r\n                    <NavLink\r\n                        onClick={()=>{setInViewSelect(false)}} \r\n                        className='viewSelection__Link'\r\n                        to =\"/today\"\r\n                        style= {({isActive})=>{\r\n                            return{\r\n                            color: isActive &&'white',\r\n                            fontWeight: 400\r\n                            }\r\n                        }}>\r\n                        Today\r\n                        <span className=\"viewSelection__num\">{tasksToday(tasks)}</span>\r\n                    </NavLink>\r\n                    \r\n                    <NavLink\r\n                        onClick={()=>{setInViewSelect(false)}} \r\n                        className='viewSelection__Link'\r\n                        to='/upcoming'\r\n                        style= {({isActive})=>{\r\n                            return{\r\n                            color: isActive &&'white',\r\n                            fontWeight: 400\r\n                            }\r\n                        }}\r\n                        >\r\n                        Upcoming\r\n                        <span className=\"viewSelection__num\">{tasks.length}</span>\r\n                    </NavLink>\r\n                    <NavLink\r\n                        onClick={()=>{setInViewSelect(false)}} \r\n                        className='viewSelection__Link'\r\n                        to='/completed'\r\n                        style= {({isActive})=>{\r\n                            return{\r\n                            color: isActive &&'white',\r\n                            fontWeight: 400\r\n                            }\r\n                        }}\r\n                        >\r\n                        Completed\r\n                        <span className=\"viewSelection__num\">{completed.length}</span>\r\n                    </NavLink>\r\n                </div>\r\n        </>\r\n      );\r\n}\r\n \r\nexport default ViewSelection;","import React from \"react\";\r\nimport { Formik,Form,Field, ErrorMessage } from \"formik\";\r\nimport{MdOutlineNotificationImportant} from 'react-icons/md'\r\nimport {BsCalendar2Event} from \"react-icons/bs\"\r\nimport * as Yup from 'yup';\r\nimport{format} from 'date-fns'\r\n\r\n\r\nconst NewTask = ({addOrUpdateTask,setOpenModal}) => {\r\n    const validate = Yup.object({\r\n        name: Yup.string()\r\n        .max(30,'Must be 30 charcters or less')\r\n        .required('Task Name is required'),\r\n        date: Yup.date()\r\n        .required('Date is required'),\r\n        description: Yup.string()\r\n        .max(100, 'Notes must be less than 100 characters'),\r\n        type: Yup.boolean(),\r\n    })\r\n    return (\r\n        <Formik\r\n        initialValues={{\r\n            name: '',\r\n            date: format(new Date(), 'yyyy-MM-dd'),\r\n            type:false,\r\n            description:'',\r\n            comments:'',\r\n        }}\r\n        validationSchema = {validate}\r\n        onSubmit = {values => {\r\n            addOrUpdateTask(values,'add');\r\n            \r\n\r\n\r\n        }\r\n        }\r\n        >\r\n            <Form>\r\n                <div className=\"newTask__container\">\r\n                    <div className=\"newTask__containerRow1\">\r\n                        <Field\r\n                            className=\"newTask__name\" \r\n                            type=\"text\"\r\n                            id=\"name\"\r\n                            name=\"name\"\r\n                            placeholder=\"Task name\"\r\n                        />\r\n                        <ErrorMessage name='name'/>\r\n                            <Field\r\n                                className=\"newTask__description\" \r\n                                type=\"text\"\r\n                                id=\"description\"\r\n                                name=\"description\"\r\n                                placeholder=\"Description\"\r\n                                />\r\n                         \r\n                    </div>\r\n\r\n                    <div className=\"newTask__containerRow2\">\r\n                        <label htmlFor=\"date\"><BsCalendar2Event className=\"newTask__calendar\"/>\r\n                            <Field \r\n                                className=\"newTask__date\"\r\n                                type=\"date\"\r\n                                id=\"date\"\r\n                                name=\"date\"\r\n                                \r\n                            />\r\n                            <ErrorMessage name='date'/>\r\n                            </label>\r\n\r\n                            <label className=\"newTask__typeLabel\"htmlFor=\"type\">\r\n                            <Field\r\n                            className=\"newTask__type\" \r\n                            type=\"checkbox\"\r\n                            id=\"type\"\r\n                            name=\"type\"\r\n                            />\r\n                            <span className=\"bell\"><MdOutlineNotificationImportant /></span></label>\r\n                        <div className=\"btngrp\">    \r\n                            <button className=\"newTask__cancel\" onClick={()=>{setOpenModal(false)}}> Cancel </button>\r\n                            <button className=\"newTask__add\" type='submit'> Add </button> \r\n                        </div>\r\n                    </div>\r\n                    \r\n\r\n                </div>\r\n            </Form>\r\n        </Formik>\r\n     );\r\n}\r\n \r\nexport default NewTask;\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { Formik,Form,Field, ErrorMessage } from \"formik\";\r\nimport {AiOutlineCalendar} from \"react-icons/ai\";\r\nimport{BsTextParagraph} from 'react-icons/bs'\r\nimport {parseISO,format } from 'date-fns';\r\nimport * as Yup from 'yup';\r\n\r\nconst ViewSelectedTask = ({selectedTask,completeSelected,addOrUpdateTask,modalType,deleteTask}) => {\r\n    const completedView = modalType==='completed'?true:false;\r\n    const[focus,setFocus] = useState(false)\r\n    const validate = Yup.object({\r\n        name: Yup.string()\r\n        .max(30,'Must be 30 charcters or less')\r\n        .required('Task Name is required'),\r\n        date: Yup.date()\r\n        .required('Date is required'),\r\n        description: Yup.string()\r\n        .max(100, 'Notes must be less than 100 characters'),\r\n        Type: Yup.boolean(),\r\n        comments: Yup.string()\r\n        .max(100,'Must be 100 charcters or less')\r\n    })\r\n    return (\r\n        <Formik\r\n        initialValues={{\r\n            id: selectedTask.id,\r\n            name: selectedTask.name,\r\n            date: format(selectedTask.date, 'yyyy-MM-dd'),\r\n            description: selectedTask.description,\r\n            type: selectedTask.type,\r\n            comments:selectedTask.comments,\r\n        }}\r\n        validationSchema = {validate}\r\n        onSubmit = {values => {\r\n            values.date=parseISO(values.date);\r\n            addOrUpdateTask(values,'update');\r\n\r\n        }\r\n        }\r\n        >\r\n            <Form className={`selected ${completedView&&'selected--completed'}`}>\r\n                    \r\n                    <div className=\"selected__columns\">\r\n                        \r\n                        <div className= \"selected__column1\">\r\n                            <div className=\"selected__containerRow\">\r\n                                <label htmlFor={selectedTask.name}>\r\n                                    <input className=\"selectedCheckbox__input\" type=\"checkbox\" id= {selectedTask.name}\r\n                                    onChange={() => completeSelected(selectedTask,selectedTask.index)}/>\r\n                                    <div className=\"selectedCheckbox\"></div>\r\n                                </label>\r\n                                <div className=\"selected__nameCont\" onFocus={()=>setFocus(true)} onBlur={()=>setFocus(false)} style={{border: focus&&'1px solid var(--borderlineColor)'}}>\r\n                                    <Field\r\n                                        className='selected__name'\r\n                                        type=\"text\"\r\n                                        id=\"name\"\r\n                                        name=\"name\"\r\n                                    />\r\n                                    <ErrorMessage name='name'/>\r\n                                    <label className=\"selected__descCont\"><BsTextParagraph className='paraIcon'/>\r\n                                    <Field\r\n                                            className=\"selected__description\" \r\n                                            type=\"text\"\r\n                                            id=\"description\"\r\n                                            name=\"description\"\r\n                                            placeholder=\"Description\"\r\n                                            />\r\n                                    </label>\r\n                                </div>\r\n\r\n                            \r\n                            </div>\r\n                            <div className=\"selected__commentsLine\"></div>\r\n                            <div className=\"selected__containerRow--comments\">\r\n                                    <Field\r\n                                        className=\"selected__comments\" \r\n                                        type=\"text\"\r\n                                        id=\"comments\"\r\n                                        name=\"comments\"\r\n                                        placeholder=\"comments\"\r\n                                        />\r\n                                \r\n                            </div>\r\n                        </div>\r\n                        <div className=\"selected__column2\">\r\n                            <div className=\"selected__column2Line\"></div>\r\n                            <div className=\"selected__containerRow\">                        \r\n                                <label className='selected__datecont'htmlFor=\"taskDate\"><AiOutlineCalendar className=\"selectedCalendar\"/>\r\n                                    <Field \r\n                                        className=\"selected__date\"\r\n                                        type=\"date\"\r\n                                        id=\"date\"\r\n                                        name=\"date\"\r\n                                    /></label>\r\n                                    <ErrorMessage name='date'/>\r\n                                \r\n                            </div>\r\n                            <div className=\"selected__column2Line\"></div>\r\n                            <div className=\"selected__containerRow\">\r\n                                <Field\r\n                                className=\"selected__type\" \r\n                                type=\"checkbox\"\r\n                                id=\"type\"\r\n                                name=\"type\"\r\n                                />\r\n                                <label className=\"selected__typeLabel\"htmlFor=\"type\">Urgent</label>\r\n                                \r\n                            </div>\r\n                            <div className=\"column2Line\"></div>    \r\n                            {!completedView&&<button className=\"selected__save\" type='submit'> Update </button>}\r\n                            {!completedView&&<button className=\"selected__delete\" type='delete'onClick={()=>{deleteTask(selectedTask.id)}}>Delete</button>}\r\n                        </div>\r\n                        \r\n                    </div>\r\n            </Form>\r\n        </Formik>\r\n     );\r\n}\r\n \r\nexport default ViewSelectedTask;","import React from \"react\";\r\nimport NewTask from \"./NewTask\";\r\nimport ViewSelectedTask from \"./ViewSelectedTask\";\r\nimport {CSSTransition} from \"react-transition-group\";\r\nconst Modal = ({openModal,selectedTask,completeSelected,setOpenModal,addOrUpdateTask,modalType,deleteTask}) => {\r\n    return (\r\n      <>\r\n        <CSSTransition\r\n        in={openModal}\r\n        timeout={100}\r\n        classNames='modalTransition'\r\n        unmountOnExit\r\n        >\r\n        <div className=\"modal\">  \r\n          <div className=\"modal__Background\" onClick = {()=>{setOpenModal(false);}}></div>\r\n          <div className=\"modal__dialog\">\r\n            <div className=\"modal__close\"><button className=\"modal__x\" onClick={()=>setOpenModal(false)}>x</button></div>\r\n            {modalType ==='add' && <NewTask addOrUpdateTask={addOrUpdateTask} setOpenModal={setOpenModal}/>}\r\n            {modalType ==='update' && <ViewSelectedTask addOrUpdateTask={addOrUpdateTask} selectedTask={selectedTask} completeSelected={completeSelected}setOpenModal={setOpenModal}modalType={modalType}deleteTask={deleteTask}/>}\r\n            {modalType ==='completed' && <ViewSelectedTask selectedTask={selectedTask} completeSelected={completeSelected}setOpenModal={setOpenModal}modalType={modalType}/>}\r\n          </div>\r\n        </div> \r\n        </CSSTransition>\r\n      </>\r\n      );\r\n}\r\n \r\nexport default Modal;","import { AiOutlinePlus } from \"react-icons/ai\";\r\nimport React from \"react\";\r\nconst AddTask = ({onClick}) => {\r\n    return (\r\n            <button onClick={onClick} className=\"addTask\">\r\n                <AiOutlinePlus className=\"addTask__plusIcon\"/>\r\n                <p>Add Task</p>\r\n            </button>\r\n      );\r\n}\r\n \r\nexport default AddTask;","import React, {useEffect,useState} from \"react\";\r\nimport {format, isToday} from 'date-fns'\r\nimport {BsCalendar2Event} from \"react-icons/bs\"\r\nimport {FaTasks} from \"react-icons/fa\"\r\nimport{MdOutlineNotificationImportant} from 'react-icons/md'\r\nimport AddTask from \"./AddTask\";\r\nimport {Triangle} from \"react-loader-spinner\"\r\n\r\n\r\nconst Today = ({tasks, selectTask,completedSelected,setOpenModal,setModalType,tasksToday,getTasks}) => {\r\n    const [loading,setLoading]= useState(true);\r\n    useEffect(()=>{\r\n        getTasks()\r\n        console.log('tasks loaded');\r\n        setTimeout(() => {\r\n           setLoading(false); \r\n        }, 5000);\r\n        \r\n    },[])\r\n\r\n    if (loading)\r\n        return <div className='loader'><Triangle  color= 'white'ariaLabel=\"loading-indicator\" /></div>\r\n    else{\r\n        if(tasksToday(tasks)===0){\r\n            return(\r\n            <>  \r\n                <h1 className=\"today__header\"> Today <span className=\"today__date\">{format(new Date(),'ccc MMM d ')}</span></h1>\r\n                <AddTask onClick={()=>{setModalType('add');setOpenModal(true);}} ></AddTask>\r\n                <FaTasks className=\"noTasks\"></FaTasks>\r\n                <div className=\"noTasks__message\">No Tasks for Today !</div>\r\n            </> \r\n            ) \r\n        }\r\n        else {\r\n            return(\r\n\r\n                <>\r\n                <h1 className=\"today__header\"> Today <span className=\"today__date\">{format(new Date(),'ccc MMM d ')}</span></h1>\r\n                {tasks.map((task, index) => {\r\n                    \r\n                    if(isToday(task.date)){\r\n                    return(\r\n\r\n                    <div className=\"container\" key={index}>\r\n                        <label>\r\n                            <input className=\"checkbox__input\" type=\"checkbox\"\r\n                            onChange={()=>{\r\n                                completedSelected(task,index);\r\n                            }}/>\r\n                            <div className=\"checkbox\"></div>\r\n                        </label>\r\n                        <div onClick={()=>{selectTask(task,index,false);}} className='task'>\r\n                            <div className='task__name'>{task.name}</div>\r\n                            {task.description&&<div className=\"task__description\">{task.description}</div>}\r\n                            <div className='task__date'><BsCalendar2Event/>{format((task.date),'MMM d')}</div>\r\n                            {task.type && <span className=\"task__urgent\">Urgent <MdOutlineNotificationImportant/></span>}\r\n                        </div>\r\n                    </div>\r\n                    )\r\n                    }    \r\n                } \r\n                )}\r\n                {tasksToday(tasks)>0&&<AddTask onClick={()=>{setModalType('add');setOpenModal(true);}} ></AddTask>}  \r\n                </>\r\n            );\r\n        }\r\n    }\r\n}\r\nexport default Today;","import React from \"react\";\r\nimport {format, isSameDay, isTomorrow,isToday,isYesterday} from 'date-fns'\r\nimport {BsCalendar2Event} from \"react-icons/bs\"\r\nimport{MdOutlineNotificationImportant} from 'react-icons/md'\r\nimport AddTask from \"./AddTask\";\r\nimport {FaTasks} from \"react-icons/fa\"\r\n\r\nconst Upcoming = ({tasks,setOpenModal,selectTask,completedSelected,setModalType,getTasks}) => {\r\n    function renderHeader(task,index){\r\n        if(index===0){\r\n            return(\r\n            <h1 className= 'dayHeader'>\r\n                {format(task.date,'MMM d')} •\r\n                {isToday(task.date)&& <span> Today •</span>}\r\n                {isYesterday(task.date)&& <span> Yesterday •</span>}\r\n                {isTomorrow(task.date)&& <span> Tomorrow •</span>}\r\n                {format(task.date,' eeee')} \r\n            </h1>)\r\n\r\n        }\r\n        else if(!isSameDay(tasks[index-1].date,task.date)){\r\n            return(\r\n            <>\r\n            <AddTask onClick={()=>{setModalType('add');setOpenModal(true);}} ></AddTask>\r\n            <h1 className= 'dayHeader'>\r\n                {format(task.date,'MMM d')} •\r\n                {isToday(task.date)&& <span> Today •</span>}\r\n                {isYesterday(task.date)&& <span> Yesterday •</span>}\r\n                {isTomorrow(task.date)&& <span> Tomorrow •</span>}\r\n                {format(task.date,' eeee')} \r\n            </h1>\r\n            </>)\r\n        }\r\n    }\r\n    if(tasks.length===0){\r\n        return(\r\n            <>\r\n            <h1 className=\"today__header\"> Today <span className=\"today__date\">{format(new Date(),'ccc MMM d ')}</span></h1>\r\n            <AddTask onClick={()=>{setModalType('add');setOpenModal(true);}} ></AddTask>\r\n            <FaTasks className=\"noTasks\"></FaTasks>\r\n            <div className=\"noTasks__message\">No Upcoming Tasks!</div>\r\n            </> \r\n\r\n        )\r\n    }\r\n    else{return (\r\n            <>\r\n            \r\n            {tasks.map((task, index) => {\r\n                return(\r\n    \r\n                <React.Fragment key={index}>\r\n                {renderHeader(task,index)}\r\n                        <div className=\"container\">\r\n                            <label>\r\n                                <input className=\"checkbox__input\" type=\"checkbox\"\r\n                                onChange={()=>{\r\n                                    completedSelected(task,index);\r\n                                }}/>\r\n                                <div className=\"checkbox\"></div>\r\n                            </label>\r\n                            <div onClick={()=>{selectTask(task,index,false)}} className='task'>\r\n                                <div className='task__name'>{task.name}</div>\r\n                                {task.description&&<div className=\"task__description\">{task.description}</div>}\r\n                                <div className='task__date'><BsCalendar2Event/>{format((task.date),'MMM d')}</div>\r\n                                {task.type && <span className=\"task__urgent\">Urgent <MdOutlineNotificationImportant/></span>}\r\n                            </div>\r\n                        </div>\r\n                {index===tasks.length-1 && <AddTask onClick={()=>{setModalType('add');setOpenModal(true);}} ></AddTask>}\r\n                </React.Fragment>\r\n                \r\n                    \r\n\r\n            \r\n            )})}\r\n            </>\r\n\r\n    )}}\r\nexport default Upcoming;","import React from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\n\r\nconst Header = () => {\r\n    const location = useLocation();\r\n    return ( \r\n        <h1 className=\"nav__header\">{location.pathname.slice(1)}</h1>\r\n     );\r\n}\r\n \r\nexport default Header;","import React from \"react\";\r\nimport { AiOutlineMenu } from \"react-icons/ai\";\r\nimport Header from './Header';\r\n\r\n\r\n\r\nconst Navigation = ({inViewSelect,setInViewSelect}) => {\r\n    function logout(){\r\n        localStorage.removeItem('userId');\r\n        window.location.reload() \r\n    }\r\n    if(localStorage.getItem('userId')!= null){\r\n    return (\r\n        <nav className=\"nav\">\r\n            <button className=\"nav__Menu\" onClick={()=>{inViewSelect?setInViewSelect(false):setInViewSelect(true);}}><AiOutlineMenu className=\"nav__icon\"/></button>\r\n            <Header className= 'nav__Page'/>\r\n            <button className=\"nav__logout\"onClick={()=>{logout();}}>Log-Out</button>\r\n        </nav>\r\n\r\n      );\r\n    }\r\n}\r\n \r\nexport default Navigation;","import React from \"react\";\r\nimport {format, isSameDay } from 'date-fns'\r\nimport{FaCheckCircle} from 'react-icons/fa'\r\nimport {FaTasks} from \"react-icons/fa\"\r\n\r\n\r\n\r\nconst Completed = ({completed,selectTask}) => {\r\n    function renderHeader(task,index){\r\n        if(index===0){\r\n            return(\r\n            <h1 className= 'dayHeader'>\r\n                {format(task.date,'MMM d • eeee')} \r\n\r\n            </h1>)\r\n\r\n        }\r\n        else if(!isSameDay(completed[index-1].date,task.date)){\r\n            return(\r\n            <>\r\n            <h1 className= 'dayHeader'>\r\n                {format(task.date,'MMM d • eeee')} \r\n            </h1>\r\n            </>)\r\n        }\r\n    }\r\n\r\n    \r\n    if(completed.length===0){\r\n        return(\r\n            <>\r\n            <FaTasks className=\"noTasks\"></FaTasks>\r\n            <div className=\"noTasks__message\">No Completed Tasks!</div>\r\n            </> \r\n\r\n        )\r\n    }\r\n    else{\r\n        return (\r\n            <>\r\n            {completed.map((task, index) => {\r\n                return(\r\n    \r\n                <React.Fragment key={index}>\r\n                    {renderHeader(task,index)}\r\n                        <div className=\"container\">\r\n                            <FaCheckCircle className=\"task__completedCheck\"/>\r\n                            <div onClick={()=>{selectTask(task,index,true)}} className='task'>\r\n                                <div className='task__name'>{task.name}</div>\r\n                                {task.description&&<div className=\"task__description\">{task.description}</div>}\r\n                            </div>\r\n                        </div>\r\n                </React.Fragment>\r\n            )})}\r\n            </>\r\n\r\n    )}}\r\n \r\nexport default Completed;","import React from \"react\";\r\nimport { useState,useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {Formik,Form,Field,ErrorMessage} from \"formik\";\r\nimport * as Yup from 'yup';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst Login = () => {\r\n    const navigate= useNavigate();\r\n    const[loginError,setLoginError]=useState();\r\n\r\n    useEffect(()=>{\r\n      if(localStorage.getItem('userId'))\r\n        navigate('/today');\r\n      else\r\n        navigate('/login');\r\n    },[])\r\n    const validate = Yup.object({\r\n        username:Yup.string()\r\n        .min(6,'Username must be more than 6 character ')\r\n        .max(15,'Must be 15 charcters or less')\r\n        .required('Username is required')\r\n        .matches(\r\n            /^[a-zA-Z0-9_-]+$/, 'Username contains invalid characters'\r\n          ),\r\n        password:Yup.string()\r\n        .required('Password is required')\r\n    })\r\n    return (\r\n    <Formik\r\n        initialValues={{\r\n            username: \"\",\r\n            password: \"\",\r\n        }}\r\n        validationSchema = {validate}\r\n        onSubmit = {values => {\r\n                axios.post('http://localhost/login.php',values)\r\n                 .then(res=>{\r\n                   console.log(res.data)\r\n                   if (typeof(res.data)=== 'string'){\r\n                    \r\n                    setLoginError(res.data);\r\n                     \r\n                   }\r\n                   else{\r\n                     localStorage.setItem('userId', res.data)\r\n                     console.log('logged in');\r\n                     navigate('/today');\r\n                   }\r\n                 })\r\n                 .catch((error)=> {\r\n                   if (error.response) {\r\n                     console.log(error.response.data);\r\n                     console.log(error.response.status);\r\n                     console.log(error.response.headers);\r\n                   } else if (error.request) {\r\n                     console.log(error.request);\r\n                   } else {\r\n                     console.log('Error', error.message);\r\n                   }\r\n                   console.log(error.config);\r\n               });\r\n\r\n            console.log('waited')\r\n\r\n        }}\r\n    >\r\n\r\n        \r\n        <Form>\r\n            <div className=\"login\">\r\n                <div className=\"login__banner\">Sign-in</div>\r\n                {loginError&& <div className=\"login__error\">{loginError}</div>}\r\n                <div className=\"login__row\">\r\n                    <div><label htmlFor=\"username\"className=\"login__label\">Username</label></div>\r\n                    <Field\r\n                        className=\"login__input\" \r\n                        type=\"text\"\r\n                        id=\"username\"\r\n                        name=\"username\"\r\n                        placeholder= \"Enter you Username...\"  \r\n                    />\r\n                    <ErrorMessage name= 'username'/>\r\n                </div>\r\n                <div className=\"login__row\">\r\n                    <div><label htmlFor=\"password\"className=\"login__label\">Password</label></div>\r\n                    <Field\r\n                        className=\"login__input\" \r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        name=\"password\"\r\n                        placeholder= \"Enter you Password...\"\r\n                    />\r\n                    \r\n                    <ErrorMessage name= 'password'/>\r\n                </div>\r\n                <button className=\"login__button\" type='submit' >Log in</button>\r\n                <div className=\"login__create\">Don’t have an account? <NavLink className='login_createLink'to='../signup'>Sign up</NavLink></div>\r\n            </div>\r\n        </Form>\r\n    </Formik>\r\n    );\r\n}\r\n \r\nexport default Login;","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {Formik,Form,Field,ErrorMessage} from \"formik\";\r\nimport * as Yup from 'yup';\r\nimport axios from \"axios\";\r\nconst Signup = () => {\r\n    const[createError,setCreateError]=useState();\r\n    const navigate= useNavigate();\r\n    const validate = Yup.object({\r\n        username:Yup.string()\r\n        .min(6,'Username must be more than 6 character ')\r\n        .max(15,'Must be 15 charcters or less')\r\n        .required('Username is required')\r\n        .matches(\r\n            /^[a-zA-Z0-9_-]+$/, 'Username contains invalid characters'\r\n          ),\r\n        password:Yup.string()\r\n        .min(8,'Password must be more than 6 character ')\r\n        .max(15, 'Pasword must be 15 characters or less')\r\n        .required('Password is required')\r\n        .matches(\r\n            /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})/,\r\n            \"Must Contain 8 Characters, One Uppercase, One Lowercase, One Number and One Special Case Character\"\r\n          )\r\n        \r\n    })\r\n    return (\r\n    <Formik\r\n        initialValues={{\r\n            username: \"\",\r\n            password: \"\",\r\n        }}\r\n        validationSchema = {validate}\r\n        onSubmit = {values => {\r\n            \r\n            axios.post('http://localhost/create-user.php',values)\r\n            .then(res=>{\r\n                if(res.data==\"<Username Taken\"){\r\n                    setCreateError(\"Username Taken\")\r\n                }\r\n                else{\r\n                localStorage.setItem('userId',res.data)\r\n                navigate('/today');\r\n                }\r\n            })\r\n            .catch((error)=> {\r\n                if (error.response) {\r\n                console.log(error.response.data);\r\n                console.log(error.response.status);\r\n                console.log(error.response.headers);\r\n                } else if (error.request) {\r\n                console.log(error.request);}\r\n                else {\r\n                    console.log('Error', error.message);\r\n                }\r\n                console.log(error.config);\r\n            });\r\n              \r\n        }}\r\n    >\r\n\r\n        \r\n        <Form>\r\n            <div className=\"login\">\r\n                <div className=\"login__banner\">Create Account</div>\r\n                {createError&& <div className=\"login__error\">{createError}</div>}\r\n                <div className=\"login__row\">\r\n                    <div><label htmlFor=\"username\"className=\"login__label\">Username</label></div>\r\n                    <Field\r\n                        className=\"login__input\" \r\n                        type=\"text\"\r\n                        id=\"username\"\r\n                        name=\"username\"\r\n                        placeholder= \"Enter you Username...\"  \r\n                    />\r\n                    <ErrorMessage name= 'username'/>\r\n                </div>\r\n                <div className=\"login__row\">\r\n                    <div><label htmlFor=\"password\"className=\"login__label\">Password</label></div>\r\n                    <Field\r\n                        className=\"login__input\" \r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        name=\"password\"\r\n                        placeholder= \"Enter you Password...\"\r\n                    />\r\n                    \r\n                    <ErrorMessage name= 'password'/>\r\n                </div>\r\n                <button className=\"login__button\" type='submit' >Create Account</button>\r\n            </div>\r\n        </Form>\r\n    </Formik>\r\n    );\r\n}\r\n \r\nexport default Signup;","import React from \"react\";\r\nimport { Outlet,Navigate } from \"react-router-dom\";\r\nimport Login from \"./Login\";\r\n\r\nconst useAuth = () => {\r\n    const user = localStorage.getItem('userId');\r\n    if(user!=null){\r\n    return true\r\n    }\r\n    else\r\n    return false;\r\n}\r\n \r\n\r\n\r\nconst ProtectedRoutes = () => {\r\n    const isAuth= useAuth();\r\n    return isAuth? <Outlet/>: <Login/>&&<Navigate to ='/login'/>;\r\n}\r\n \r\nexport default ProtectedRoutes ;","import React, { useEffect } from \"react\";\r\nimport ViewSelection from \"./ViewSelection\";\r\nimport Modal from \"./Modal\";\r\nimport { useState } from \"react\";\r\nimport{BrowserRouter as Router, Navigate, Route, Routes} from \"react-router-dom\"\r\nimport Today from './Today';\r\nimport Upcoming from \"./Upcoming\";\r\nimport {isToday,format,parseISO} from \"date-fns\";\r\nimport Navigation from './Navigation';\r\nimport {CSSTransition} from \"react-transition-group\";\r\nimport Completed from './Completed';\r\nimport axios from 'axios'\r\nimport cloneDeep from 'lodash.clonedeep'\r\nimport Login from \"./Login\";\r\nimport Signup from \"./Signup\";\r\nimport ProtectedRoutes from './ProtectedRoutes';\r\n\r\nconst View = () => {\r\n    const[modalType,setModalType]= useState(false)\r\n    const[inViewSelect, setInViewSelect] = useState(false);\r\n    const[selectedTask,setSelectedTask] = useState(null);\r\n    const[openModal,setOpenModal] = useState(false);\r\n    const[completed,setCompleted]= useState([]);\r\n    const[tasks,setTasks] = useState([]);\r\n\r\n    \r\n\r\n\r\n\r\n\r\n    // Get Tasks\r\nfunction getTasks(){\r\n    const userId = localStorage.getItem('userId');\r\n    axios.get('http://localhost/get-tasks.php',{params:{userId:userId}})\r\n        .then((res)=>{\r\n\r\n        let tasks = res.data.map(item=>{\r\n            item.date = parseISO(item.date);\r\n            item.type = item.type === '1';\r\n\r\n            return item;\r\n        })\r\n            const comp=[];\r\n            const incomp=[];\r\n            for(let task of tasks){\r\n                if (task.completed=== 0)\r\n                    incomp.push(task)\r\n                else\r\n                    comp.push(task)\r\n            }\r\n            setTasks(incomp);\r\n            setCompleted(comp);\r\n    })\r\n    .catch((error)=> {\r\n        if (error.response) {\r\n          console.log(error.response.data);\r\n          console.log(error.response.status);\r\n          console.log(error.response.headers);\r\n        } else if (error.request) {\r\n          console.log(error.request);\r\n        } else {\r\n          console.log('Error', error.message);\r\n        }\r\n        console.log(error.config);\r\n    });\r\n}\r\nfunction completeSelected(task,index){\r\n    task.completed = '1';\r\n    axios.put('http://localhost/complete-task.php',task)\r\n    .catch((error)=> {\r\n        if (error.response) {\r\n          console.log(error.response.data);\r\n          console.log(error.response.status);\r\n          console.log(error.response.headers);\r\n        } else if (error.request) {\r\n          console.log(error.request);\r\n        } else {\r\n          console.log('Error', error.message);\r\n        }\r\n        console.log(error.config);\r\n    });\r\n    const filtered = [...tasks];\r\n    const completedTask = filtered.splice(index,1);\r\n    setTasks(filtered);\r\n    setCompleted([...completed,...completedTask]);  \r\n    setOpenModal(false);\r\n}\r\nfunction addOrUpdateTask(task,modalType){\r\n    if(modalType==='add'){\r\n    task.date= parseISO(task.date);\r\n    task.uID = localStorage.getItem('userId');\r\n    const jsonTask= cloneDeep(task);\r\n    jsonTask.date=format(jsonTask.date,'yyyy-MM-dd HH:mm:ss');\r\n    axios.post('http://localhost/add-task.php',jsonTask)\r\n    .then((res)=>{\r\n        const resID = res.data;\r\n        task.id = resID;\r\n        setTasks([...tasks,task]);\r\n    })\r\n    .catch((error)=> {\r\n        if (error.response) {\r\n          console.log(error.response.data);\r\n          console.log(error.response.status);\r\n          console.log(error.response.headers);\r\n        } else if (error.request) {\r\n          console.log(error.request);\r\n        } else {\r\n          console.log('Error', error.message);\r\n        }\r\n        console.log(error.config);\r\n    });\r\n    \r\n    }\r\n    \r\n    else if(modalType==='update'){\r\n        axios.put('http://localhost/update-task.php',task)\r\n        const updated =tasks.map(item=>{\r\n            if(item.id===task.id)\r\n                return task;\r\n            else \r\n                return item;    \r\n        })\r\n        .catch((error)=> {\r\n            if (error.response) {\r\n              console.log(error.response.data);\r\n              console.log(error.response.status);\r\n              console.log(error.response.headers);\r\n            } else if (error.request) {\r\n              console.log(error.request);\r\n            } else {\r\n              console.log('Error', error.message);\r\n            }\r\n            console.log(error.config);\r\n        });\r\n        setTasks(updated);\r\n     \r\n    }\r\n    setOpenModal(false);\r\n}\r\nfunction selectTask(task,index,completed){\r\n    task.index=index;\r\n    setSelectedTask(task);\r\n    completed?setModalType('completed'):setModalType('update');\r\n    setOpenModal(true);\r\n    \r\n}\r\nfunction tasksToday(tasks){\r\n    const count = tasks.filter(task=>isToday(task.date))\r\n    return count.length\r\n}\r\nfunction deleteTask(selectedId){\r\n    axios.delete('http://localhost/delete-task.php',{data:{id:selectedId}})\r\n        .catch((error)=> {\r\n        if (error.response) {\r\n          console.log(error.response.data);\r\n          console.log(error.response.status);\r\n          console.log(error.response.headers);\r\n        } else if (error.request) {\r\n          console.log(error.request);\r\n        } else {\r\n          console.log('Error', error.message);\r\n        }\r\n        console.log(error.config);\r\n    });\r\n    const update= tasks.filter(item => item.id!==selectedId)\r\n    setTasks(update);\r\n    setOpenModal(false);\r\n}\r\n    return (\r\n        <>\r\n        <Modal openModal={openModal} modalType={modalType} selectedTask={selectedTask} completeSelected={completeSelected} setOpenModal={setOpenModal} addOrUpdateTask={addOrUpdateTask}deleteTask={deleteTask}/>\r\n        \r\n            <Router>\r\n                <Navigation setInViewSelect={setInViewSelect}inViewSelect={inViewSelect}/>\r\n                <CSSTransition\r\n                in={inViewSelect}\r\n                timeout={250}\r\n                classNames='nmodal'\r\n                unmountOnExit\r\n                > \r\n                <ViewSelection setInViewSelect={setInViewSelect} tasks={tasks}tasksToday={tasksToday}completed={completed} addOrUpdateTask={addOrUpdateTask}/>\r\n                </CSSTransition>\r\n                <div className=\"view\">\r\n                    \r\n                    <Routes>\r\n                        <Route path='*' element={<Login/>} />\r\n                        <Route  path=\"/\" element= {<Login/>}/>\r\n                        <Route path='/login' element= {<Login/>}/>\r\n                        <Route path='/signup' element= {<Signup/>}/>\r\n                        <Route element={<ProtectedRoutes/>}>\r\n                          <Route  path=\"/today\" element= {<Today \r\n                              getTasks={getTasks}\r\n                              tasks={tasks} \r\n                              selectTask={selectTask} \r\n                              setSelectedTask={setSelectedTask}\r\n                              setOpenModal={setOpenModal}\r\n                              completedSelected={completeSelected}\r\n                              setModalType={setModalType}\r\n                              tasksToday={tasksToday}\r\n                              />}/> \r\n                          <Route  path=\"/upcoming\" element= {<Upcoming \r\n                              getTasks={getTasks}\r\n                              tasks={tasks}\r\n                              selectTask={selectTask} \r\n                              setOpenModal={setOpenModal}\r\n                              setSelectedTask={setSelectedTask} \r\n                              completedSelected={completeSelected}\r\n                              setModalType={setModalType}\r\n                              />}/>\r\n                          <Route  path=\"/completed\" element= {<Completed \r\n                              completed= {completed}\r\n                              selectTask={selectTask} \r\n                              />}/>\r\n                        </Route>\r\n                            \r\n\r\n                    </Routes>\r\n                </div>\r\n            </Router>\r\n            \r\n            \r\n            \r\n        \r\n        </>\r\n      );\r\n}\r\n \r\nexport default View;","import React from \"react\";\nimport \"./App.css\";\nimport View from \"./Components/View\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <View></View>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}